# A document can have any number of runs
# Runs don't have to be in order in the document, but if they are it'll go slightly faster
# Only the prompt is required for a run. When a value is left out the last known one is used
# You can stop the last value from being used by passing False for it

# You can reference other prompts and image outputs with '[ref]':
# prompt, image_prompt, init_image: '[prior_run], [predefined_prompt]'
# predefined prompts are fields in the object root that only have a string
# { title: 'Woah', neon_prompt: 'Billowing Neon Lights', neon_run: { prompt: '[neon_prompt]' } }
# Using a prior run will replace the the prompt or image output with the value from that run
# prompt reference updates happen before any parsing

# Prompt structure is parts seperated by modifiers, starting and ending with a part:
#   part->mod->part->mod->part
# Parts are one or more concurrent prompts with an optional duration
# These will be added and removed over the course of the run
# Modifiers adjust the current prompt list somehow before adding the next one:
# --: Remove the newest prompt
# __: Remove the oldest prompt
# ++: Add the next prompt (technically does nothing as the next prompt is always added)
# ||: Clear all prompts
# {n}: Run this part n times longer than the others, can be placed anywhere in the part
# eg: 'a++b{2}--c__d||e&&f'
#   Run a -> add b -> remove b, add c -> remove a, add d -> remove everything, add e and f
#   b will be run twice as long as the others, i.e. 1:2:1:1 ratio
# Inside each part you can run prompts concurrently with &&:
# a&&b: Run a and b at the same time, they are treated as a pair for {} but not -- and __
#   This is because they're linked in the part, but once they're in the prompt list the link goes away

title: Prompts Demo
red: red fire lava explosion
blue: blue ocean waves sapphire
green: green lush foliage landscape
concur:
  prompt: '[red]&&[blue]&&[green]'
  iterations: 150
  images: 50
rgb_add:
  prompt: '[red]++[blue]++[green]'
rgb_sub:
  prompt: '[red]&&[blue]&&[green]||[red]&&[blue]||[green]'
rgb_cycle:
  prompt: '[red]++[blue]__[green]__[red]__[blue]'
rgb_add_grow:
  prompt: '[red]++[blue]{1.5}++[green]{2}'
rg_gb_br_clear:
  prompt: '[red]&&[green]||[green]&&[blue]||[blue][red]'